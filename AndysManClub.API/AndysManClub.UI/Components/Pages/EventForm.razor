@page "/eventform"
@using Microsoft.Extensions.Logging
@using MudBlazor
@inject ILogger<EventForm> Logger

<MudForm @ref="form" @bind-IsValid="@success" @bind-Errors="@errors">
    <label>
        Identifier: @Model!.Id
    </label>    
    <MudTextField T="string" Label="Title" Required="true" RequiredError="User name is required!" />
    <MudTextField T="string" Label="Description"/>
    <MudTextField T="string" Label="Location" Required="true" RequiredError="User name is required!" />
    <MudDatePicker Label="Event Start Date" MinDate="DateTime.Today" @bind-Date="Model!.EventDateTime" />
    <MudButton Variant="Variant.Outlined" Color="Color.Secondary" Disabled="@(!success)" Class="ml-auto" OnClick="@(()=> Submit())">Submit</MudButton>
</MudForm>

@code {
    bool success;
    string[] errors = { };
    MudForm form;

    [SupplyParameterFromForm]
    public Event? Model { get; set; }

    DateTime date = new DateTime(2019,11,17);

    protected override void OnInitialized() => Model ??= new Event { LeadContactPerson = new Person { Name = "Dan", Surname = "Du Preez"} };

    private void Submit()
    {
        Logger.LogInformation("Id = {Id}", Model?.Id);
        Logger.LogInformation("Id = {Id}", Model?.LeadContactPerson.Name);
        Logger.LogInformation("Id = {Id}", Model?.LeadContactPerson.Surname);
    }

    public class Event
    {
        public Event()
        {
            Id = Guid.NewGuid();
        }

        public Guid Id { get; }
        public string Title { get; set; }
        public string? Description { get; set; }
        public string Location { get; set; }
        public Person LeadContactPerson { get; set; } //Person object
        public DateTime? EventDateTime { get; set; }
        public bool IsActive { get; set; }
        public ICollection<Person> Volunteers { get; set; }
    }

    public class Person
    {
        public required string Name { get; set; }
        public required string Surname { get; set; }
    }

    // Create event
    // Event will have
    // Description/name/location
    // Lead contact person => Loading from google workspace - currently logged in user
    // Event dateTime


    // View event
    // bringing everythng back


    // Register for event
    // Add that currently logged in user to a collection on the Event
    
    // Can an event be 'editable' & what gets edited?

    // Can an event be deleted?
}